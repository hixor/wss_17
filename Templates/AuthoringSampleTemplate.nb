(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     65778,       1639]
NotebookOptionsPosition[     31309,        900]
NotebookOutlinePosition[     58755,       1484]
CellTagsIndexPosition[     58299,       1466]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox["\<\"[ Your Title Here ]\"\>", "Title", "ClickToEnterLabel",
    StripOnInput->False],
   ShowStringCharacters -> False,
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>((SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell["", "Title"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null)& )[],
  Evaluator->Automatic,
  Method->"Preemptive"]], "Title",
 DefaultNewCellStyle->"Title",
 CellTags->{
  "ClickToEnter", 
   "Title"},ExpressionUUID->"ff200018-d6e0-483d-898d-fd4768b5e865"],

Cell[CellGroupData[{

Cell[BoxData[Cell[TextData[StyleBox["1. Put in your title above.\n2. Fill in \
Challenge content below.\n3. Preview submission.\n4. Submit Challenge and \
approve terms.",
  FontFamily->"Source Sans Pro",
  FontSize->12,
  FontWeight->"SemiBold",
  FontColor->GrayLevel[0.5]]], "AuthoringSectionCaption",ExpressionUUID->
  "5e69d79c-b70a-4687-bec9-ecdbc4c4708e"]], "AuthoringSectionCaption",
 CellGroupingRules->{
  "TitleGrouping", -1},ExpressionUUID->"0e70573e-ef4e-45cb-8c03-3c2129790ba0"],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Description of Challenge\"\>", "AuthoringSectionLabel",
      StripOnInput->False], 
     StyleBox["\<\"(required)\"\>", "AuthoringSectionLabelExtra",
      StripOnInput->False]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {Left, Left}, "Rows" -> {{Automatic}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "AuthoringSection",
 DefaultNewCellStyle->"Text",
 CellTags->{
  "DescriptionOfChallenge", 
   "Required"},ExpressionUUID->"06d02a28-0e98-42c6-a303-c50b55aacbaf"],

Cell["\<\
Provide a short description for the Challenge that will go up on the website. \
Try to limit the description to 1\[Dash]3 sentences. Start with a sentence \
describing the premise of the Challenge if it is unclear from the title. \
Follow that with a description of the coding Challenge that needs to be \
solved.\
\>", "AuthoringSectionCaption",
 DefaultNewCellStyle->
  "Text",ExpressionUUID->"13f73b55-2dbe-4485-bf19-a90157dacf35"],

Cell["For example: ", "AuthoringSectionCaption",
 DefaultNewCellStyle->
  "Text",ExpressionUUID->"e0d85a0a-e478-4125-bfd8-d3314c5435d0"],

Cell["\<\
An anagram is a word or phrase created by rearranging the letters of another \
word or phrase. For example, \[OpenCurlyDoubleQuote]phrase\
\[CloseCurlyDoubleQuote] is an anagram of \[OpenCurlyDoubleQuote]seraph\
\[CloseCurlyDoubleQuote] (an angel). Write a function that takes a word and \
returns a list of anagrams from the dictionary.\
\>", "AuthoringSectionCaption",
 CellMargins->{{Inherited, Inherited}, {20, Inherited}},
 DefaultNewCellStyle->
  "Text",ExpressionUUID->"325793c9-0781-46fc-8876-6d69f894c838"]
}, Open  ]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox["\<\"[ Click here to enter description ]\"\>", "Text", 
    "ClickToEnterLabel",
    StripOnInput->False],
   ShowStringCharacters -> False,
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>((SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell["", "Text"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null)& )[],
  Evaluator->Automatic,
  Method->"Preemptive"]], "Text",
 DefaultNewCellStyle->"Text",
 CellTags->{
  "ClickToEnter", 
   "Text"},ExpressionUUID->"d24a62a7-6448-4df6-9e18-08c531ceaab8"],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"More Details\"\>", "AuthoringSectionLabel",
      StripOnInput->False], 
     StyleBox["\<\"(optional)\"\>", "AuthoringSectionLabelExtra",
      StripOnInput->False]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {Left, Left}, "Rows" -> {{Automatic}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "AuthoringSection",
 DefaultNewCellStyle->"Text",
 CellTags->{
  "MoreDetails", 
   "Optional"},ExpressionUUID->"f4130f5b-09ad-4f7d-a148-df2003bc8347"],

Cell["\<\
Introduce the Challenge by providing any background context, basic technical \
details, a general description of the Challenge and examples. This \
corresponds to the first block of text the users see in the Challenge \
notebook. This description may be anything from one sentence to a couple of \
paragraphs.\
\>", "AuthoringSectionCaption",
 DefaultNewCellStyle->
  "Text",ExpressionUUID->"1652e452-c706-466a-832e-2fc081de7e97"],

Cell[TextData[{
 "You may include links to websites (such as ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    PaneSelectorBox[{False->"\<\"MathWorld\"\>", True->
     StyleBox["\<\"MathWorld\"\>", "HyperlinkActive"]}, Dynamic[
      CurrentValue["MouseOver"]],
     BaseStyle->{"Text", "Hyperlink"},
     FrameMargins->0,
     ImageSize->Automatic],
    BaseStyle->"Hyperlink",
    ButtonData->{
      URL["http://mathworld.wolfram.com"], None},
    ButtonNote->"http://mathworld.wolfram.com"],
   Annotation[#, "http://mathworld.wolfram.com", "Hyperlink"]& ]],
  ExpressionUUID->"17ee3c4e-57c7-4ea7-a25b-769e287f10b6"],
 "\[LongDash]for example, ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    PaneSelectorBox[{False->"\<\"Point\"\>", True->
     StyleBox["\<\"Point\"\>", "HyperlinkActive"]}, Dynamic[
      CurrentValue["MouseOver"]],
     BaseStyle->{"Text", "Hyperlink"},
     FrameMargins->0,
     ImageSize->Automatic],
    BaseStyle->"Hyperlink",
    ButtonData->{
      URL["http://mathworld.wolfram.com/Point.html"], None},
    ButtonNote->"http://mathworld.wolfram.com/Point.html"],
   Annotation[#, "http://mathworld.wolfram.com/Point.html", "Hyperlink"]& ]],
  ExpressionUUID->"79012b6b-f4c2-40be-8708-0e40ea6ee325"],
 ") or pages in the ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    PaneSelectorBox[{False->"\<\"Documentation Center\"\>", True->
     StyleBox["\<\"Documentation Center\"\>", "HyperlinkActive"]}, Dynamic[
      CurrentValue["MouseOver"]],
     BaseStyle->{"Text", "Hyperlink"},
     FrameMargins->0,
     ImageSize->Automatic],
    BaseStyle->"Link",
    ButtonData->"paclet:guide/WolframRoot",
    ButtonNote->"paclet:guide/WolframRoot"],
   Annotation[#, "paclet:guide/WolframRoot", "Hyperlink"]& ]],ExpressionUUID->
  "684ff57a-2229-4a3d-8418-8564eaa4133b"],
 " (for example, ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    PaneSelectorBox[{False->"\<\"Point\"\>", True->
     StyleBox["\<\"Point\"\>", "HyperlinkActive"]}, Dynamic[
      CurrentValue["MouseOver"]],
     BaseStyle->{"InlineCode", "Hyperlink"},
     FrameMargins->0,
     ImageSize->Automatic],
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Point",
    ButtonNote->"paclet:ref/Point"],
   Annotation[#, "paclet:ref/Point", "Hyperlink"]& ]],ExpressionUUID->
  "83e222e3-3290-4fcc-82fe-b3055a030fba"],
 ")."
}], "AuthoringSectionCaption",
 DefaultNewCellStyle->
  "Text",ExpressionUUID->"df3d0863-4cf0-460f-bad6-4e14bfb676aa"],

Cell["Example:", "AuthoringSectionCaption",
 DefaultNewCellStyle->
  "Text",ExpressionUUID->"cdfe1e77-216b-4a03-88a4-5a32f15ab6f3"],

Cell["\<\
The possible anagrams of the word \[OpenCurlyDoubleQuote]past\
\[CloseCurlyDoubleQuote] are \[OpenCurlyDoubleQuote]spat\
\[CloseCurlyDoubleQuote], \[OpenCurlyDoubleQuote]pats\[CloseCurlyDoubleQuote] \
and \[OpenCurlyDoubleQuote]taps\[CloseCurlyDoubleQuote]. Find a way to \
identify anagrams of a given word.\
\>", "AuthoringSectionCaption",
 CellMargins->{{Inherited, Inherited}, {20, Inherited}},
 DefaultNewCellStyle->
  "Text",ExpressionUUID->"9bf2d729-0585-4a53-aa4c-af7f040ae910"]
}, Open  ]],

Cell["Insert text containing more details here", "Text",ExpressionUUID->"8e769635-ee06-4e59-aae2-8538a6fa62cb"],

Cell[CellGroupData[{

Cell["What Your Code Should Do", "Section",ExpressionUUID->"5a98ae26-45eb-413d-a077-cc38966b2ae6"],

Cell["\<\
Insert text specifying the function behavior here and include some input / \
output examples below\
\>", "Text",ExpressionUUID->"212a27a6-e366-4cf8-849f-f220f77d0b83"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "x", "]"}]], "Input",
 CellLabelAutoDelete->False,
 CellLabel->"In[1]:=",ExpressionUUID->"6beb652d-4f59-43ae-9812-897b8b6fc20d"],

Cell[BoxData[
 RowBox[{"f", "[", "x", "]"}]], "Output",
 CellLabelAutoDelete->False,
 CellLabel->"Out[1]=",ExpressionUUID->"14fb8380-073d-4e78-ac67-43adb5de3953"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["More Examples", "Subsection",ExpressionUUID->"7561ad6f-7171-4276-b27a-74993a7c96b3"],

Cell["Add more input / output examples", "Text",ExpressionUUID->"11bc4a12-ba10-4abe-b852-9c3e6679a384"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "5", "]"}]], "Input",
 CellLabelAutoDelete->False,
 CellLabel->"In[2]:=",ExpressionUUID->"3b567f51-e5b1-408e-8b22-862e695a5052"],

Cell[BoxData[
 RowBox[{"f", "[", "5", "]"}]], "Output",
 CellLabelAutoDelete->False,
 CellLabel->"Out[2]=",ExpressionUUID->"d42941ea-1657-45ce-b7db-2e7016c8781b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"1", "+", "1"}], "]"}]], "Input",
 CellLabelAutoDelete->False,
 CellLabel->"In[3]:=",ExpressionUUID->"9ffcd585-2c81-4894-ab33-b218feef4b70"],

Cell[BoxData[
 RowBox[{"f", "[", "2", "]"}]], "Output",
 CellLabelAutoDelete->False,
 CellLabel->"Out[3]=",ExpressionUUID->"7b85ec3f-e39c-47cb-ab7e-a9adda480826"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Things You May Find Useful", "Subsection",ExpressionUUID->"c2d246d8-4465-4d00-bfb4-d45031e495e8"],

Cell["\<\
Include some helpful links or other information or just delete this section \
if it's not useful\
\>", "Text",ExpressionUUID->"628ab7b8-98e4-4424-b16d-1e5a4ad9f39e"],

Cell[TextData[ButtonBox["Wolfram MathWorld",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://mathworld.wolfram.com/"], None},
 ButtonNote->"http://mathworld.wolfram.com/"]], "Text",ExpressionUUID->\
"2205e65d-6f25-489d-9a33-725ad8a2099a"],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Input Section\"\>", "AuthoringSectionLabel",
      StripOnInput->False], 
     StyleBox["\<\"(optional)\"\>", "AuthoringSectionLabelExtra",
      StripOnInput->False]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {Left, Left}, "Rows" -> {{Automatic}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "AuthoringSection",
 DefaultNewCellStyle->"Input",
 CellTags->{
  "InputSection", 
   "Optional"},ExpressionUUID->"7f46cef9-0ad3-43e4-8ef2-c684d7e730e3"],

Cell["\<\
Name the left-hand side of the function the user is supposed to define. \
Provide all arguments and conditions required for the function.\
\>", "AuthoringSectionCaption",
 DefaultNewCellStyle->
  "Input",ExpressionUUID->"76c1f310-f9a9-482d-9362-523de1947714"],

Cell[TextData[{
 "For example, if you were defining a function ",
 StyleBox["f", "InlineCode"],
 " to list the numbers from 1 to ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],ExpressionUUID->
  "c8dc6e81-3d5f-4650-84fb-07042ddad58c"],
 " using ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    PaneSelectorBox[{False->"\<\"Range\"\>", True->
     StyleBox["\<\"Range\"\>", "HyperlinkActive"]}, Dynamic[
      CurrentValue["MouseOver"]],
     BaseStyle->{"InlineCode", "Hyperlink"},
     FrameMargins->0,
     ImageSize->Automatic],
    BaseStyle->"Link",
    ButtonData->"paclet:ref/Range",
    ButtonNote->"paclet:ref/Range"],
   Annotation[#, "paclet:ref/Range", "Hyperlink"]& ]],ExpressionUUID->
  "e04fd001-eb31-48af-8641-f7ff876602f0"],
 ", the left-hand side ",
 "would be:"
}], "AuthoringSectionCaption",
 DefaultNewCellStyle->
  "Input",ExpressionUUID->"97e7d292-5737-4aa4-8d24-36d41780480f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"n_Integer", "?", "Positive"}], "]"}], 
  ":="}]], "AuthoringSectionCaption", "Input",
 Selectable->True,
 CellMargins->{{Inherited, Inherited}, {10 + Inherited, 5}},
 Evaluatable->False,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellLabelPositioning->Left,
 CellFrameLabels->{{
    Cell["(example)", "AuthoringSectionLabelExtra"], None}, {None, None}},
 DefaultNewCellStyle->"Input",
 AutoStyleOptions->{
 "UndefinedSymbolStyle"->{}},ExpressionUUID->"4acde9bc-5463-423f-8a08-\
b8c56ce4c375"]
}, Open  ]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox["\<\"[ Click here to enter input ]\"\>", "Text", 
    "ClickToEnterLabel",
    StripOnInput->False],
   ShowStringCharacters -> False,
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>((SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null)& )[],
  Evaluator->Automatic,
  Method->"Preemptive"]], "Text",
 DefaultNewCellStyle->"Input",
 CellTags->{
  "ClickToEnter", 
   "Input"},ExpressionUUID->"b120994d-6f71-475c-9f2a-3cffe73e3604"],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Solution\"\>", "AuthoringSectionLabel",
      StripOnInput->False], 
     StyleBox["\<\"(required)\"\>", "AuthoringSectionLabelExtra",
      StripOnInput->False]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {Left, Left}, "Rows" -> {{Automatic}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "AuthoringSection",
 DefaultNewCellStyle->"Input",
 CellTags->{
  "Solution", 
   "Required"},ExpressionUUID->"d4b1ef93-c418-4ad5-a86c-f2d42fc0024a"],

Cell["\<\
Provide the solution to the Challenge. Make sure to define all variables and \
helper functions used in the solution. By default, the user will not see the \
solution.\
\>", "AuthoringSectionCaption",
 DefaultNewCellStyle->
  "Input",ExpressionUUID->"eb1eff0b-f630-46f7-be40-ccc330f92c3a"],

Cell["For example:", "AuthoringSectionCaption",
 DefaultNewCellStyle->
  "Input",ExpressionUUID->"2f6d8e99-b994-47c3-b47f-5c0b56006775"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"n_Integer", "?", "Positive"}], "]"}], ":=", 
  RowBox[{"Range", "[", "n", "]"}]}]], "AuthoringSectionCaption", "Input",
 Selectable->True,
 CellMargins->{{Inherited, Inherited}, {10 + Inherited, 5}},
 Evaluatable->False,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellLabelPositioning->Left,
 CellFrameLabels->{{
    Cell["(example)", "AuthoringSectionLabelExtra"], None}, {None, None}},
 DefaultNewCellStyle->"Input",
 AutoStyleOptions->{
 "UndefinedSymbolStyle"->{}},ExpressionUUID->"f6ae4e22-07fb-401d-a066-\
cffb1aca34d9"]
}, Open  ]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox["\<\"[ Click here to enter Challenge solution ]\"\>", "Text", 
    "ClickToEnterLabel",
    StripOnInput->False],
   ShowStringCharacters -> False,
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>((SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null)& )[],
  Evaluator->Automatic,
  Method->"Preemptive"]], "Text",
 DefaultNewCellStyle->"Input",
 CellTags->{
  "ClickToEnter", 
   "Input"},ExpressionUUID->"d17ab415-e6f6-4578-aa86-1a3a11ed8c04"],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Test Cases\"\>", "AuthoringSectionLabel",
      StripOnInput->False], 
     StyleBox["\<\"(required)\"\>", "AuthoringSectionLabelExtra",
      StripOnInput->False]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {Left, Left}, "Rows" -> {{Automatic}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "AuthoringSection",
 DefaultNewCellStyle->"Input",
 CellTags->{
  "TestCases", 
   "Required"},ExpressionUUID->"c716901f-b06b-4437-8f06-6f9e7808d771"],

Cell[TextData[{
 "Provide code that generates test cases on which ",
 "the user\[CloseCurlyQuote]s solutions should be tested. The test case ",
 "code should be an expression that uses Wolfram Language built-in ",
 "functions to ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    PaneSelectorBox[{False->"\<\"randomly\"\>", True->
     StyleBox["\<\"randomly\"\>", "HyperlinkActive"]}, Dynamic[
      CurrentValue["MouseOver"]],
     BaseStyle->{"Text", "Hyperlink"},
     FrameMargins->0,
     ImageSize->Automatic],
    BaseStyle->"Link",
    ButtonData->"paclet:guide/RandomNumberGeneration",
    ButtonNote->"paclet:guide/RandomNumberGeneration"],
   Annotation[#, "paclet:guide/RandomNumberGeneration", "Hyperlink"]& ]],
  ExpressionUUID->"f1ba70fd-fa8e-4b1b-928d-738a3edaca68"],
 " generate sample inputs. The ",
 "expression should evaluate to the form ",
 Cell[BoxData[
  RowBox[{"HoldComplete", "[", 
   RowBox[{"YourFunctionName", "[", "yourSampleInputs", "]"}], "]"}]], 
  "AuthoringSectionCaption", "Input",
  Selectable->True,
  CellMargins->{{Inherited, Inherited}, {10 + Inherited, 5}},
  Evaluatable->False,
  CellGroupingRules->{"GroupTogetherGrouping", 10000.},
  CellLabelPositioning->Left,
  CellFrameLabels->{{
     Cell["(example)", "AuthoringSectionLabelExtra"], None}, {None, None}},
  AutoStyleOptions->{"UndefinedSymbolStyle"->{}},
  LanguageCategory->"Input",ExpressionUUID->
  "8e5be565-6211-438d-aeea-d3ef598234a7"],
 "."
}], "AuthoringSectionCaption",
 DefaultNewCellStyle->
  "Input",ExpressionUUID->"6a51e1c1-b54c-48b1-a5aa-08343002dffe"],

Cell[TextData[{
 "For example, for ",
 "the function ",
 StyleBox["f", "InlineCode"],
 ", this test case specifies that ",
 StyleBox["f", "InlineCode"],
 " should be applied to a random number up to 10, with an integer ",
 "being five times as likely to be chosen as a real."
}], "AuthoringSectionCaption",
 DefaultNewCellStyle->
  "Input",ExpressionUUID->"50d87f3b-8131-468b-8d5b-e51ce82ee6b9"],

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"n", "=", 
     RowBox[{"RandomChoice", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"5", ",", "1"}], "}"}], "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"RandomInteger", "[", "10", "]"}], ",", 
         RowBox[{"RandomReal", "[", "10", "]"}]}], "}"}]}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"HoldComplete", "[", 
    RowBox[{"f", "[", "n", "]"}], "]"}]}], "]"}]], "AuthoringSectionCaption", \
"Input",
 Selectable->True,
 CellMargins->{{Inherited, Inherited}, {10 + Inherited, 5}},
 Evaluatable->False,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellLabelPositioning->Left,
 CellFrameLabels->{{
    Cell["(example)", "AuthoringSectionLabelExtra"], None}, {None, None}},
 DefaultNewCellStyle->"Input",
 AutoStyleOptions->{
 "UndefinedSymbolStyle"->{}},ExpressionUUID->"8b0b00e9-a4ab-49b3-ade8-\
f2ad9abd25c2"],

Cell["Here's an alternate way of specifying the same test case:", \
"AuthoringSectionCaption",
 DefaultNewCellStyle->
  "Input",ExpressionUUID->"cd0431e1-ec51-4a75-b74b-efaf202718c2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"HoldComplete", "[", 
    RowBox[{"f", "[", "#", "]"}], "]"}], "&"}], "[", 
  RowBox[{"RandomChoice", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"5", ",", "1"}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RandomInteger", "[", "10", "]"}], ",", 
      RowBox[{"RandomReal", "[", "10", "]"}]}], "}"}]}], "]"}], 
  "]"}]], "AuthoringSectionCaption", "Input",
 Selectable->True,
 CellMargins->{{Inherited, Inherited}, {10 + Inherited, 5}},
 Evaluatable->False,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellLabelPositioning->Left,
 CellFrameLabels->{{
    Cell["(example)", "AuthoringSectionLabelExtra"], None}, {None, None}},
 DefaultNewCellStyle->"Input",
 AutoStyleOptions->{
 "UndefinedSymbolStyle"->{}},ExpressionUUID->"90040d84-dc2d-4f17-994b-\
4a79d0adf6f8"]
}, Open  ]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox["\<\"[ Click here to enter test cases ]\"\>", "Text", 
    "ClickToEnterLabel",
    StripOnInput->False],
   ShowStringCharacters -> False,
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>((SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell[
      BoxData[""], "Input"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null)& )[],
  Evaluator->Automatic,
  Method->"Preemptive"]], "Text",
 DefaultNewCellStyle->"Input",
 CellTags->{
  "ClickToEnter", 
   "Input"},ExpressionUUID->"bcc8f99d-0b0a-4f35-8513-8af1f3517d86"],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Authors\"\>", "AuthoringSectionLabel",
      StripOnInput->False], 
     StyleBox["\<\"(optional)\"\>", "AuthoringSectionLabelExtra",
      StripOnInput->False]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {Left, Left}, "Rows" -> {{Automatic}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "AuthoringSection",
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Authors", 
   "Optional"},ExpressionUUID->"157ce426-ada6-49fc-bdb9-9ff03f396ff8"],

Cell["\<\
For single authors: \[OpenCurlyDoubleQuote]Contributed by: John Smith\
\[CloseCurlyDoubleQuote]; for multiple authors: \
\[OpenCurlyDoubleQuote]Contributed by: John Smith and Jane Doe\
\[CloseCurlyDoubleQuote].\
\>", "AuthoringSectionCaption",
 CellMargins->{{Inherited, Inherited}, {20, Inherited}},
 DefaultNewCellStyle->
  "Text",ExpressionUUID->"0abed4c3-773e-4519-81d9-32f4246e855b"]
}, Open  ]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox["\<\"[ Click here to enter authoring information ]\"\>", "Text", 
    "ClickToEnterLabel",
    StripOnInput->False],
   ShowStringCharacters -> False,
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>((SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell["", "Text"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null)& )[],
  Evaluator->Automatic,
  Method->"Preemptive"]], "Text",
 DefaultNewCellStyle->"Text",
 CellTags->{
  "ClickToEnter", 
   "Text"},ExpressionUUID->"3b5e2aae-2474-4130-9c94-e897cc9947cc"],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Categories\"\>", "AuthoringSectionLabel",
      StripOnInput->False], 
     StyleBox["\<\"(optional)\"\>", "AuthoringSectionLabelExtra",
      StripOnInput->False]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {Left, Left}, "Rows" -> {{Automatic}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "AuthoringSection",
 DefaultNewCellStyle->"Text",
 CellTags->{
  "Categories", 
   "Optional"},ExpressionUUID->"371f9b00-6b0e-4506-a16c-f097845e1e57"],

Cell["\<\
Check all categories relevant to the Challenge. Use the input field to add \
custom tags.\
\>", "AuthoringSectionCaption",
 CellMargins->{{Inherited, Inherited}, {20, Inherited}},
 DefaultNewCellStyle->
  "Text",ExpressionUUID->"9d418898-98b1-475f-9554-9259bfbb66d6"]
}, Open  ]],

Cell[BoxData[
 StyleBox[
  DynamicModuleBox[{WolframChallenges`Notebooks`Authoring`Private`checkedQ$$ =
    False, WolframChallenges`Notebooks`Authoring`Private`newTag$$ = {
    Checkbox[
     Dynamic[WolframChallenges`Notebooks`Authoring`Private`checkedQ$$]], 
    EventHandler[
     InputField[
      Dynamic[WolframChallenges`Notebooks`Authoring`Private`tagString$$], 
      String, FieldHint -> "Enter a custom tag", ImageSize -> {130, 20}], {
     "ReturnKeyDown" :> (
       WolframChallenges`Notebooks`Authoring`Private`checkedQ$$ = True; 
       SelectionMove[
         InputNotebook[], Before, Cell]; NotebookFind[
         SelectedNotebook[], "Enter a custom tag"])}]}, 
   WolframChallenges`Notebooks`Authoring`Private`tagString$$ = "", 
   WolframChallenges`Notebooks`Authoring`Private`$CheckedTagData$$ = 
   Association[{
    "Algorithms" -> False, "Arrays" -> False, "Computational Knowledge" -> 
     False, "Computational Sciences" -> False, "Lists" -> False, 
     "Mathematics" -> False, "Primes" -> False, "Sequences" -> False, 
     "Start Here" -> False, "Words and Linguistics" -> False}], 
   WolframChallenges`Notebooks`Authoring`Private`categories$$ = {{
     Checkbox[
      Dynamic[
       WolframChallenges`Notebooks`Authoring`Private`$CheckedTagData$$[
       "Algorithms"]]], "Algorithms"}, {
     Checkbox[
      Dynamic[
       WolframChallenges`Notebooks`Authoring`Private`$CheckedTagData$$[
       "Arrays"]]], "Arrays"}, {
     Checkbox[
      Dynamic[
       WolframChallenges`Notebooks`Authoring`Private`$CheckedTagData$$[
       "Computational Knowledge"]]], "Computational Knowledge"}, {
     Checkbox[
      Dynamic[
       WolframChallenges`Notebooks`Authoring`Private`$CheckedTagData$$[
       "Computational Sciences"]]], "Computational Sciences"}, {
     Checkbox[
      Dynamic[
       WolframChallenges`Notebooks`Authoring`Private`$CheckedTagData$$[
       "Lists"]]], "Lists"}, {
     Checkbox[
      Dynamic[
       WolframChallenges`Notebooks`Authoring`Private`$CheckedTagData$$[
       "Mathematics"]]], "Mathematics"}, {
     Checkbox[
      Dynamic[
       WolframChallenges`Notebooks`Authoring`Private`$CheckedTagData$$[
       "Primes"]]], "Primes"}, {
     Checkbox[
      Dynamic[
       WolframChallenges`Notebooks`Authoring`Private`$CheckedTagData$$[
       "Sequences"]]], "Sequences"}, {
     Checkbox[
      Dynamic[
       WolframChallenges`Notebooks`Authoring`Private`$CheckedTagData$$[
       "Start Here"]]], "Start Here"}, {
     Checkbox[
      Dynamic[
       WolframChallenges`Notebooks`Authoring`Private`$CheckedTagData$$[
       "Words and Linguistics"]]], "Words and Linguistics"}, {
     Checkbox[
      Dynamic[WolframChallenges`Notebooks`Authoring`Private`checkedQ$$]], 
     EventHandler[
      InputField[
       Dynamic[WolframChallenges`Notebooks`Authoring`Private`tagString$$], 
       String, FieldHint -> "Enter a custom tag", ImageSize -> {130, 20}], {
      "ReturnKeyDown" :> (
        WolframChallenges`Notebooks`Authoring`Private`checkedQ$$ = True; 
        SelectionMove[
          InputNotebook[], Before, Cell]; NotebookFind[
          SelectedNotebook[], "Enter a custom tag"])}]}}, 
   WolframChallenges`Notebooks`Authoring`Private`trueTags$$ = {}}, 
   DynamicBox[ToBoxes[
    If[WolframChallenges`Notebooks`Authoring`Private`checkedQ$$, 
       If[WolframChallenges`Notebooks`Authoring`Private`tagString$$ =!= "", 
         With[{
          WolframChallenges`Notebooks`Authoring`Private`c$ = 
           GeneralUtilities`ToTitleCase[
             ToLowerCase[
             WolframChallenges`Notebooks`Authoring`Private`tagString$$]]}, 
          WolframChallenges`Notebooks`Authoring`Private`tagString$$ = ""; 
          WolframChallenges`Notebooks`Authoring`Private`$CheckedTagData$$[
            WolframChallenges`Notebooks`Authoring`Private`c$] = True; If[
            FreeQ[WolframChallenges`Notebooks`Authoring`Private`categories$$, {
              Checkbox[
               Dynamic[
                
                WolframChallenges`Notebooks`Authoring`Private`$CheckedTagData$\
$[WolframChallenges`Notebooks`Authoring`Private`c$]]], 
              WolframChallenges`Notebooks`Authoring`Private`c$}], 
            Part[WolframChallenges`Notebooks`Authoring`Private`categories$$, \
-1] = {
               Checkbox[
                Dynamic[
                 
                 WolframChallenges`Notebooks`Authoring`Private`$\
CheckedTagData$$[WolframChallenges`Notebooks`Authoring`Private`c$]]], 
               WolframChallenges`Notebooks`Authoring`Private`c$}; 
            AppendTo[
             WolframChallenges`Notebooks`Authoring`Private`categories$$, 
              WolframChallenges`Notebooks`Authoring`Private`newTag$$]; 
            Null]]]; WolframChallenges`Notebooks`Authoring`Private`checkedQ$$ = 
        False; Null]; Grid[
       Map[Flatten, 
        Block[{WolframChallenges`Notebooks`Authoring`Private`$empty}, 
         ReplaceAll[
          Partition[
          WolframChallenges`Notebooks`Authoring`Private`categories$$, 
           UpTo[3], 3, 1, 
           WolframChallenges`Notebooks`Authoring`Private`$empty], 
          WolframChallenges`Notebooks`Authoring`Private`$empty -> {"", ""}]]],
        Alignment -> {{{Center, Left}}, Center}, ItemSize -> {{
          Scaled[0.025], 
          Scaled[0.275], 
          Scaled[0.025], 
          Scaled[0.275], 
          Scaled[0.025], 
          Scaled[0.275]}, 1.5}, BaseStyle -> {ShowStringCharacters -> False}],
      StandardForm],
    ImageSizeCache->{817., {42.5, 48.5}}],
   DynamicModuleValues:>{}], "Panel",
  StripOnInput->False,
  Background->GrayLevel[1]]], "TagGrid",
 Deletable->False,
 ShowStringCharacters->
  False,ExpressionUUID->"5e5d583a-fe85-44d9-87fd-e69b17520f32"],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Author Email\"\>", "AuthoringSectionLabel",
      StripOnInput->False], 
     StyleBox["\<\"(optional)\"\>", "AuthoringSectionLabelExtra",
      StripOnInput->False]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {Left, Left}, "Rows" -> {{Automatic}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "AuthoringSection",
 DefaultNewCellStyle->"Text",
 CellTags->{
  "AuthorEmail", 
   "Optional"},ExpressionUUID->"68549405-806b-4e27-aa51-ecb74f2ef415"],

Cell[TextData[{
 "If you prefer to use an email address other than your ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    PaneSelectorBox[{False->"\<\"$WolframID\"\>", True->
     StyleBox["\<\"$WolframID\"\>", "HyperlinkActive"]}, Dynamic[
      CurrentValue["MouseOver"]],
     BaseStyle->{"InlineCode", "Hyperlink"},
     FrameMargins->0,
     ImageSize->Automatic],
    BaseStyle->"Link",
    ButtonData->"paclet:ref/$WolframID",
    ButtonNote->"paclet:ref/$WolframID"],
   Annotation[#, "paclet:ref/$WolframID", "Hyperlink"]& ]],ExpressionUUID->
  "231faff4-5e6a-4bc5-b9a6-ea95ce669967"],
 " as a means of contact, you may enter it here."
}], "AuthoringSectionCaption",
 CellMargins->{{Inherited, Inherited}, {20, Inherited}},
 DefaultNewCellStyle->
  "Text",ExpressionUUID->"23f0ab45-2f63-4476-b054-ced39b9a297f"]
}, Open  ]],

Cell[BoxData[
 ButtonBox[
  PaneBox[
   StyleBox["\<\"[ Click here to enter email ]\"\>", "Text", 
    "ClickToEnterLabel",
    StripOnInput->False],
   ShowStringCharacters -> False,
   ImageSize->Full],
  Appearance->None,
  ButtonFunction:>((SelectionMove[
     InputNotebook[], All, ButtonCell]; NotebookWrite[
     InputNotebook[], 
     Cell["", "Text"]]; SelectionMove[
     InputNotebook[], Before, CellContents]; Null)& )[],
  Evaluator->Automatic,
  Method->"Preemptive"]], "Text",
 DefaultNewCellStyle->"Text",
 CellTags->{
  "ClickToEnter", 
   "Text"},ExpressionUUID->"f3d1d256-3076-4947-a000-fb9f203933be"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{Automatic, Automatic},
WindowMargins->{{Automatic, Automatic}, {Automatic, Automatic}},
DockedCells->{
  Cell[
   BoxData[
    TagBox[
     GridBox[{{
        ButtonBox[
         TagBox[
          GridBox[{{
             GraphicsBox[
              TagBox[
               RasterBox[CompressedData["
1:eJzVmguUlVUVx4eXTDCoMSKGyEMFRzSjpNBhyiTB0KQionKQsdHoIQnlAysS
zAdQmVApGtCIkiudLElMYyQwWVaQr1JBMrUkK8wCMsznbv86+1v3zLnn+747
1zu43Gv91/0e55y993ns13eHNs+c1NytqqqqXtGg6F5VeRKRbop9KzDOmxmr
EjJ1Fql8H1H8VbHQ7gcqWhS/UMxBh0iffRVftjbX0seez1f8TTFlT+uRRirL
YMUYu+6v+K84ajJd/ywF4t3xkTGO9/pBT1nfJrt/QXGgtT0WnntaT+N9ouI5
xUq7n+TJ/EVkVHxGsUpxs2J0xljvsjY/tT7o+wVvvMnWboXiP4rxe0pPT8ZH
TZab7L5B8aIn465y1sLmaZc3zkveHrrRnm2ptD4ROfZW1Hn3rxrvB+ysTWUN
xZ3Xla9lDbTvOMX1NtYxikbjcb/xhHdXa3u4Yp9K6OjxZ389rrjde+afTWi7
mK3pBN5/D3ht896vVjxRSd461lrjg13pYc/qFT9RbFa0KoZWil+E/xDj8Yjx
rLfnXRXPm2zrK8SrbzC3w+15jw6Os5fiSMVE2/tnKj6qeLdi/w6Olcz5oEC2
fh0ZJ2Xsg4IxH1PsVryiWJzT9wDFTMU6W4cd4s5gm2GD4klx5/EPiiWK4xRd
MsZcaLx3Wx+fhpSp41jFSLvuoviTFNPLioaU/oeKix2Q6Q7FGYqDM/j1VoxX
fFvcWX1YcZqYTQra1hvvkJ5K5kl/j1JMKFHXg2wdtiqq7dkZNqcJ7USeSN/u
inni/PI1Ymfa9J8hzm7/WvFHw0OK2xSXKk5Q9BC375ttjn+lODLCZ6rJmBCy
Ndm7nib7vxWDStB3mTfOLO/5IYoPizt/fSP9Bph89yneJs6WTFbc442Hz74u
sjYJsbbsV2K1Nykus7k7PcKvr8lCnHOI9/zz3njLS9B3i9ees1otLrbDLrI3
R0T64AOftLlifo8y3X1K4sRRGfomxNpx7jlL+OJ/KS6M8K0zmW4xGZF1qzfO
1hL03Rzwfta7JpbtG7QfaLpcZveflIKPSIgYiVhkgs3N48H7VSl6367YR5xd
x79fEFnjF1JkhXLjMG1zVQpv6IagLWt5r2KJ3X8ppR/78h3i5uECxTe8d98T
d2ZfjfSDHlT0U7xT3N4+KZBhRYa8V5Wg72BxZz0k1nBA0PZb4vYt8k5P4fm0
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
GoD8eA==
                "], {{0, 58}, {60, 0}}, {0, 255}, ColorFunction -> 
                RGBColor], 
               BoxForm`ImageTag[
               "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
               False], DefaultBaseStyle -> "ImageGraphics", 
              ImageSizeRaw -> {60, 58}, PlotRange -> {{0, 60}, {0, 58}}], 
             TagBox[
              GridBox[{{
                 StyleBox[
                 "\"WOLFRAM CHALLENGES\"", FontSize -> 30, FontFamily -> 
                  "Source Sans Pro", FontWeight -> "SemiBold", FontColor -> 
                  GrayLevel[1], ShowStringCharacters -> False, StripOnInput -> 
                  False]}, {
                 StyleBox[
                 "\"Authoring Notebook\"", FontSize -> 16, FontFamily -> 
                  "Source Sans Pro Light", FontColor -> GrayLevel[1], 
                  ShowStringCharacters -> False, StripOnInput -> False]}}, 
               GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
               "Column", 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
              "Column"]}}, 
           GridBoxAlignment -> {
            "Columns" -> {Left, Left}, "Rows" -> {Center, Center}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
         ButtonFunction :> SystemOpen["http://challenges.wolfram.com/"], 
         Appearance -> None, Evaluator -> Automatic, Method -> "Preemptive"], 
        "\" \"", "\" \"", 
        TagBox[
         GridBox[{{
            StyleBox[
            "\"Authoring Tools\"", FontSize -> 14, FontFamily -> 
             "Source Sans Pro Light", FontColor -> GrayLevel[1], 
             ShowStringCharacters -> False, StripOnInput -> False]}, {
            TemplateBox[{
              
              DynamicModuleBox[{
               WolframChallenges`Notebooks`Elements`Private`$ready$$ = True}, 
               
               ButtonBox[
                DynamicBox[
                 ToBoxes[
                  If[
                   TrueQ[
                   WolframChallenges`Notebooks`Elements`Private`$ready$$], 
                   Mouseover[
                    Framed[
                    Style[
                    "Preview", "Text", FontFamily -> "Source Sans Pro", 
                    FontSize -> 12, FontColor -> 
                    RGBColor[
                    0.996078431372549, 0.3058823529411765, 
                    0.21568627450980393`]], Background -> GrayLevel[1], 
                    FrameStyle -> GrayLevel[1], RoundingRadius -> 2, 
                    ImageSize -> {Automatic, 28}, Alignment -> Center], 
                    Framed[
                    Style[
                    "Preview", "Text", FontFamily -> "Source Sans Pro", 
                    FontSize -> 12, FontColor -> GrayLevel[1]], Background -> 
                    RGBColor[
                    0.996078431372549, 0.3058823529411765, 
                    0.21568627450980393`], FrameStyle -> GrayLevel[1], 
                    RoundingRadius -> 2, ImageSize -> {Automatic, 28}, 
                    Alignment -> Center]], 
                   Framed[
                    ProgressIndicator[Appearance -> "Percolate"], Background -> 
                    GrayLevel[1], FrameStyle -> GrayLevel[1], RoundingRadius -> 
                    2, ImageSize -> {Automatic, 28}, Alignment -> Center]], 
                  StandardForm]], 
                ButtonFunction :> (
                 WolframChallenges`Notebooks`Elements`Private`$ready$$ = 
                  False; RunScheduledTask[
                  WolframChallenges`Notebooks`Elements`Private`$ready$$ = 
                    True; RemoveScheduledTask[$ScheduledTask], {30}]; Quiet[
                   
                   Block[{Print, $CloudBase = 
                    "https://www.wolframcloud.com/"}, 
                    
                    With[{WolframChallenges`Notebooks`Elements`Private`f$ = 
                    Once[
                    CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/user-9449da4d-3158-\
4f88-9478-f11a7a0d89ab/public/symbols/PreviewAuthoringNotebook"]]]}, 
                    If[
                    WolframChallenges`Notebooks`Elements`Private`f$ === \
$Failed, 
                    Unset[
                    Once[
                    CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/user-9449da4d-3158-\
4f88-9478-f11a7a0d89ab/public/symbols/PreviewAuthoringNotebook"]]]], 
                    WolframChallenges`Notebooks`Elements`Private`f$[
                    ButtonNotebook[]]]]]]; 
                 WolframChallenges`Notebooks`Elements`Private`$ready$$ = True; 
                 Null), Appearance -> None, Method -> "Queued", Enabled -> 
                Dynamic[
                 WolframChallenges`Notebooks`Elements`Private`$ready$$], 
                Evaluator -> Automatic], 
               Initialization :> {
                WolframChallenges`Notebooks`Elements`Private`$ready$$ = True},
                DynamicModuleValues :> {}], 
              InterpretationBox[
               StyleBox[
                
                GraphicsBox[{}, ImageSize -> {5, 0}, BaselinePosition -> 
                 Baseline], "CacheGraphics" -> False], 
               Spacer[5], Selectable -> False], 
              
              DynamicModuleBox[{
               WolframChallenges`Notebooks`Elements`Private`$ready$$ = True}, 
               
               ButtonBox[
                DynamicBox[
                 ToBoxes[
                  If[
                   TrueQ[
                   WolframChallenges`Notebooks`Elements`Private`$ready$$], 
                   Mouseover[
                    Framed[
                    Style[
                    "Submit Challenge", "Text", FontFamily -> 
                    "Source Sans Pro", FontSize -> 12, FontColor -> 
                    RGBColor[
                    0.996078431372549, 0.3058823529411765, 
                    0.21568627450980393`]], Background -> GrayLevel[1], 
                    FrameStyle -> GrayLevel[1], RoundingRadius -> 2, 
                    ImageSize -> {Automatic, 28}, Alignment -> Center], 
                    Framed[
                    Style[
                    "Submit Challenge", "Text", FontFamily -> 
                    "Source Sans Pro", FontSize -> 12, FontColor -> 
                    GrayLevel[1]], Background -> 
                    RGBColor[
                    0.996078431372549, 0.3058823529411765, 
                    0.21568627450980393`], FrameStyle -> GrayLevel[1], 
                    RoundingRadius -> 2, ImageSize -> {Automatic, 28}, 
                    Alignment -> Center]], 
                   Framed[
                    ProgressIndicator[Appearance -> "Percolate"], Background -> 
                    GrayLevel[1], FrameStyle -> GrayLevel[1], RoundingRadius -> 
                    2, ImageSize -> {Automatic, 28}, Alignment -> Center]], 
                  StandardForm]], 
                ButtonFunction :> (
                 WolframChallenges`Notebooks`Elements`Private`$ready$$ = 
                  False; RunScheduledTask[
                  WolframChallenges`Notebooks`Elements`Private`$ready$$ = 
                    True; RemoveScheduledTask[$ScheduledTask], {30}]; Quiet[
                   
                   Block[{Print, $CloudBase = 
                    "https://www.wolframcloud.com/"}, 
                    
                    With[{WolframChallenges`Notebooks`Elements`Private`f$ = 
                    Once[
                    CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/user-9449da4d-3158-\
4f88-9478-f11a7a0d89ab/public/symbols/SubmitAuthoringNotebook"]]]}, 
                    If[
                    WolframChallenges`Notebooks`Elements`Private`f$ === \
$Failed, 
                    Unset[
                    Once[
                    CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/user-9449da4d-3158-\
4f88-9478-f11a7a0d89ab/public/symbols/SubmitAuthoringNotebook"]]]], 
                    WolframChallenges`Notebooks`Elements`Private`f$[
                    ButtonNotebook[]]]]]]; 
                 WolframChallenges`Notebooks`Elements`Private`$ready$$ = True; 
                 Null), Appearance -> None, Method -> "Queued", Enabled -> 
                Dynamic[
                 WolframChallenges`Notebooks`Elements`Private`$ready$$], 
                Evaluator -> Automatic], 
               Initialization :> {
                WolframChallenges`Notebooks`Elements`Private`$ready$$ = True},
                DynamicModuleValues :> {}]}, "RowDefault"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Column"]}},
       AutoDelete -> False, 
      GridBoxDividers -> {
       "ColumnsIndexed" -> {3 -> GrayLevel[1]}, "Rows" -> {{None}}}, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]], 
   "Text", ShowCellBracket -> False, CellMargins -> 0, 
   CellFrameMargins -> {{50, 0}, {4, 4}}, CellFrameColor -> 
   RGBColor[0.9961, 0.3098, 0.21569], Background -> 
   RGBColor[0.9961, 0.3098, 0.21569], ShowStringCharacters -> False], 
  Cell["", "Text", CellMargins -> 0, ShowCellBracket -> False, 
   CellElementSpacings -> {"CellMinHeight" -> 5}, CellFrameMargins -> 3, 
   FontSize -> 1, CellFrame -> 0, Background -> 
   RGBColor[0.9686274509803922, 0.9137254901960784, 0.403921568627451]]},
TaggingRules->{
 "WolframChallengesInternal" -> 
  Association[
   "$VersionString" -> "public-2.10.1", "BuildDate" -> 
    DateObject[{2017, 5, 25, 20, 4, 43.7063001`9.39311891528726}, "Instant", 
      "Gregorian", 0.]]},
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (April 3, 2017)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["Title"], ShowCellBracket -> False, ShowGroupOpener -> False, 
    CellMargins -> {{65.14453125, 30}, {0., 30.}}, 
    CellFrameMargins -> {{66, Inherited}, {Inherited, 20}}, FontFamily -> 
    "Source Sans Pro Light", FontSize -> 50, FontColor -> 
    RGBColor[0.1843137254901961, 0.6509803921568628, 0.6941176470588235]], 
   Cell[
    StyleData["Section"], Editable -> True, Selectable -> True, Deletable -> 
    True, CellFrame -> {{0, 0}, {0, 1}}, ShowCellBracket -> False, 
    ShowGroupOpener -> False, CellMargins -> {{66, 30}, {Inherited, 35}}, 
    Deployed -> False, CellFrameMargins -> {{0, Inherited}, {Inherited, 10}}, 
    CellFrameColor -> GrayLevel[0.7137], FontFamily -> "Source Sans Pro", 
    FontSize -> 17, FontWeight -> "DemiBold", FontColor -> 
    Hue[0.51, 0.817, 0.72]], 
   Cell[
    StyleData["SectionNoLine", StyleDefinitions -> StyleData["Section"]], 
    CellFrame -> {{0, 0}, {0, 0}}, CellMargins -> {{49, 30}, {4, 0}}], 
   Cell[
    StyleData["SectionOnlyLine", StyleDefinitions -> StyleData["Section"]], 
    CellMargins -> {{66, 30}, {4, 35}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, CellFrameMargins -> 0, 
    FontSize -> 0.1], 
   Cell[
    StyleData["Subsection", StyleDefinitions -> StyleData["Section"]], 
    ShowCellBracket -> True, ShowGroupOpener -> True], 
   Cell[
    StyleData["Text"], ShowCellBracket -> True, 
    CellMargins -> {{66, 30}, {Inherited, Inherited}}, FontFamily -> 
    "Source Sans Pro", FontSize -> 16, FontWeight -> "Regular", FontSlant -> 
    "Plain", PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
    FontColor -> 
    RGBColor[0.3254901960784314, 0.3254901960784314, 0.3254901960784314]], 
   Cell[
    StyleData["Item"], CellDingbat -> 
    StyleBox["\[FilledSmallSquare]", Alignment -> Baseline, 
      RGBColor[0.21176470588235294`, 0.6941176470588235, 0.7490196078431373]],
     CellMargins -> {{81, 30}, {Inherited, Inherited}}, FontFamily -> 
    "Source Sans Pro", FontSize -> 16, FontWeight -> "Regular", FontSlant -> 
    "Plain", PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
    FontColor -> 
    RGBColor[0.3254901960784314, 0.3254901960784314, 0.3254901960784314]], 
   Cell[
    StyleData["Description"], ShowCellBracket -> False, 
    CellMargins -> {{71, 30}, {0, 10}}, 
    AutoStyleOptions -> {
     "LocalVariableStyle" -> {FontColor -> RGBColor[0.263, 0.537, 0.345]}}, 
    LineSpacing -> {1.2, 0}, FontFamily -> "Source Sans Pro", FontSize -> 20, 
    FontSlant -> "Plain", 
    PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, FontColor -> 
    GrayLevel[0.3]], 
   Cell[
    StyleData["WCIntroDivider"], Editable -> False, Selectable -> False, 
    Deletable -> False, ShowCellBracket -> False, 
    CellMargins -> {{66, 30}, {-2, 35}}, ShowStringCharacters -> False], 
   Cell[
    StyleData["WCIntroDividerLine", StyleDefinitions -> StyleData["Text"]], 
    Editable -> False, Selectable -> False, Deletable -> False, 
    CellFrame -> {{0, 0}, {0, 8}}, ShowCellBracket -> False, 
    CellMargins -> {{66, 30}, {15, 0}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, 
    CellFrameMargins -> {{0, 0}, {-1, 0}}, CellFrameColor -> 
    RGBColor[0.9961, 0.3098, 0.21569], FontSize -> 1], 
   Cell[
    StyleData["SubmitRow"], Editable -> False, Selectable -> False, Deletable -> 
    False, CellFrame -> {{0, 0}, {0, 2}}, ShowCellBracket -> False, 
    CellMargins -> {{66, 30}, {15, 30}}, 
    CellGroupingRules -> {"SectionGrouping", -5}, 
    CellFrameMargins -> {{Inherited, Inherited}, {20, 20}}, CellFrameColor -> 
    RGBColor[0.996078431372549, 0.3058823529411765, 0.21568627450980393`]], 
   Cell[
    StyleData["StandardForm"], FontSize -> 13], 
   Cell[
    StyleData["CodeFont"], FontSize -> 
    FEPrivate`If[False, 0.907029 Inherited, Inherited]], 
   Cell[
    StyleData["RefLink"], TemplateBoxOptions -> {DisplayFunction :> (TagBox[
        ButtonBox[#, ButtonData -> #2, BaseStyle -> Dynamic[
           If[
            CurrentValue["MouseOver"], {
            "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
            "Link"}]]], 
        MouseAppearanceTag["LinkHand"]]& )}, 
    ButtonBoxOptions -> {BaseStyle -> "Link"}], 
   Cell[
    StyleData["InlineCode", StyleDefinitions -> StyleData["StandardForm"]]], 
   Cell[
    StyleData["SmallText", StyleDefinitions -> StyleData["Text"]], FontSize -> 
    0.975 Inherited, FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["Hyperlink"], FontColor -> 
    RGBColor[0.21176470588235294`, 0.7058823529411765, 0.7490196078431373]], 
   Cell[
    StyleData["HyperlinkActive"], FontColor -> 
    RGBColor[0.996078431372549, 0.3058823529411765, 0.21568627450980393`]], 
   Cell[
    StyleData["SubmitButton"], ShowCellBracket -> False, 
    CellMargins -> {{66, Inherited}, {25, Inherited}}, ShowCellLabel -> False,
     TextAlignment -> Center, ShowStringCharacters -> False], 
   Cell[
    StyleData["SigninText", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSize -> 12, FontColor -> 
    GrayLevel[0.25]], 
   Cell[
    StyleData["ButtonLabel", StyleDefinitions -> StyleData["Text"]], 
    TextAlignment -> Center, ShowStringCharacters -> False, FontFamily -> 
    "Source Sans Pro", FontSize -> 18, FontWeight -> "DemiBold", FontColor -> 
    GrayLevel[1]], 
   Cell[
    StyleData[
    "ButtonLabelActive", StyleDefinitions -> StyleData["ButtonLabel"]], 
    TextAlignment -> Center, ShowStringCharacters -> False, FontColor -> 
    RGBColor[0.996078431372549, 0.3058823529411765, 0.21568627450980393`]], 
   Cell[
    StyleData["Subsection"], Editable -> True, Selectable -> True, Deletable -> 
    True, Deployed -> False], 
   Cell[
    StyleData["Subsubsection"], Editable -> True, Selectable -> True, 
    Deletable -> True, Deployed -> False], 
   Cell[
    StyleData["AuthoringSectionLabel"], CellMargins -> {{66, 66}, {0, 50}}, 
    ShowStringCharacters -> False, FontFamily -> "Source Sans Pro", FontSize -> 
    16, FontWeight -> "SemiBold", FontColor -> 
    RGBColor[0.996078431372549, 0.3058823529411765, 0.21568627450980393`]], 
   Cell[
    StyleData[
    "AuthoringSectionLabelExtra", StyleDefinitions -> 
     StyleData["AuthoringSectionLabel"]], ShowStringCharacters -> False, 
    FontSize -> 12, FontSlant -> "Plain", FontColor -> GrayLevel[0.7]], 
   Cell[
    StyleData[
    "AuthoringSectionCaption", StyleDefinitions -> StyleData["Text"]], 
    Editable -> False, Selectable -> False, Deletable -> False, 
    ShowCellBracket -> False, 
    CellMargins -> {{66, 66}, {Inherited, Inherited}}, Evaluatable -> False, 
    CellGroupingRules -> {"GroupTogetherGrouping", 10000.}, FontColor -> 
    GrayLevel[0.55]], 
   Cell[
    StyleData["AuthoringSection"], Editable -> False, Selectable -> False, 
    Deletable -> False, CellFrame -> {{0, 0}, {0, 1}}, ShowCellBracket -> 
    False, ShowGroupOpener -> True, 
    CellMargins -> {{66, 66}, {Inherited, 40}}, 
    CellGroupingRules -> {"GroupTogetherGrouping", 10000.}, CellFrameColor -> 
    GrayLevel[0.85], DefaultNewCellStyle -> "Text"], 
   Cell[
    StyleData["ClickToEnterLabel"], Selectable -> False], 
   Cell[
    StyleData["TagGrid", StyleDefinitions -> StyleData["Output"]], Deletable -> 
    False, ShowCellBracket -> False]}, Visible -> False, FrontEndVersion -> 
  "11.1 for Microsoft Windows (64-bit) (April 3, 2017)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "ClickToEnter"->{
  Cell[558, 20, 610, 18, 
  70, "Title", "ExpressionUUID" -> "ff200018-d6e0-483d-898d-fd4768b5e865",
   CellTags->{"ClickToEnter", "Title"}],
  Cell[3428, 98, 626, 19, 
  70, "Text", "ExpressionUUID" -> "d24a62a7-6448-4df6-9e18-08c531ceaab8",
   CellTags->{"ClickToEnter", "Text"}],
  Cell[12837, 379, 639, 20, 
  70, "Text", "ExpressionUUID" -> "b120994d-6f71-475c-9f2a-3cffe73e3604",
   CellTags->{"ClickToEnter", "Input"}],
  Cell[15116, 450, 652, 20, 
  70, "Text", "ExpressionUUID" -> "d17ab415-e6f6-4578-aa86-1a3a11ed8c04",
   CellTags->{"ClickToEnter", "Input"}],
  Cell[20313, 604, 644, 20, 
  70, "Text", "ExpressionUUID" -> "bcc8f99d-0b0a-4f35-8513-8af1f3517d86",
   CellTags->{"ClickToEnter", "Input"}],
  Cell[21955, 656, 636, 19, 
  70, "Text", "ExpressionUUID" -> "3b5e2aae-2474-4130-9c94-e897cc9947cc",
   CellTags->{"ClickToEnter", "Text"}],
  Cell[30661, 877, 620, 19, 
  70, "Text", "ExpressionUUID" -> "f3d1d256-3076-4947-a000-fb9f203933be",
   CellTags->{"ClickToEnter", "Text"}]},
 "Title"->{
  Cell[558, 20, 610, 18, 
  70, "Title", "ExpressionUUID" -> "ff200018-d6e0-483d-898d-fd4768b5e865",
   CellTags->{"ClickToEnter", "Title"}]},
 "DescriptionOfChallenge"->{
  Cell[1710, 55, 589, 15, 
  70, "AuthoringSection", "ExpressionUUID" -> "06d02a28-0e98-42c6-a303-
   c50b55aacbaf",
   CellTags->{"DescriptionOfChallenge", "Required"}]},
 "Required"->{
  Cell[1710, 55, 589, 15, 
  70, "AuthoringSection", "ExpressionUUID" -> "06d02a28-0e98-42c6-a303-
   c50b55aacbaf",
   CellTags->{"DescriptionOfChallenge", "Required"}],
  Cell[13501, 403, 560, 15, 
  70, "AuthoringSection", "ExpressionUUID" -> "d4b1ef93-c418-4ad5-a86c-
   f2d42fc0024a",
   CellTags->{"Solution", "Required"}],
  Cell[15793, 474, 563, 15, 
  70, "AuthoringSection", "ExpressionUUID" -> "c716901f-
   b06b-4437-8f06-6f9e7808d771",
   CellTags->{"TestCases", "Required"}]},
 "Text"->{
  Cell[3428, 98, 626, 19, 
  70, "Text", "ExpressionUUID" -> "d24a62a7-6448-4df6-9e18-08c531ceaab8",
   CellTags->{"ClickToEnter", "Text"}],
  Cell[21955, 656, 636, 19, 
  70, "Text", "ExpressionUUID" -> "3b5e2aae-2474-4130-9c94-e897cc9947cc",
   CellTags->{"ClickToEnter", "Text"}],
  Cell[30661, 877, 620, 19, 
  70, "Text", "ExpressionUUID" -> "f3d1d256-3076-4947-a000-fb9f203933be",
   CellTags->{"ClickToEnter", "Text"}]},
 "MoreDetails"->{
  Cell[4079, 121, 566, 15, 
  70, "AuthoringSection", "ExpressionUUID" -> "f4130f5b-09ad-4f7d-a148-
   df2003bc8347",
   CellTags->{"MoreDetails", "Optional"}]},
 "Optional"->{
  Cell[4079, 121, 566, 15, 
  70, "AuthoringSection", "ExpressionUUID" -> "f4130f5b-09ad-4f7d-a148-
   df2003bc8347",
   CellTags->{"MoreDetails", "Optional"}],
  Cell[10512, 309, 569, 15, 
  70, "AuthoringSection", "ExpressionUUID" -> "7f46cef9-0ad3-43e4-8ef2-
   c684d7e730e3",
   CellTags->{"InputSection", "Optional"}],
  Cell[20982, 628, 557, 15, 
  70, "AuthoringSection", "ExpressionUUID" -> "157ce426-ada6-49fc-
   bdb9-9ff03f396ff8",
   CellTags->{"Authors", "Optional"}],
  Cell[22616, 679, 563, 15, 
  70, "AuthoringSection", "ExpressionUUID" -> "371f9b00-6b0e-4506-a16c-
   f097845e1e57",
   CellTags->{"Categories", "Optional"}],
  Cell[29261, 837, 566, 15, 
  70, "AuthoringSection", "ExpressionUUID" -> "68549405-806b-4e27-aa51-
   ecb74f2ef415",
   CellTags->{"AuthorEmail", "Optional"}]},
 "InputSection"->{
  Cell[10512, 309, 569, 15, 
  70, "AuthoringSection", "ExpressionUUID" -> "7f46cef9-0ad3-43e4-8ef2-
   c684d7e730e3",
   CellTags->{"InputSection", "Optional"}]},
 "Input"->{
  Cell[12837, 379, 639, 20, 
  70, "Text", "ExpressionUUID" -> "b120994d-6f71-475c-9f2a-3cffe73e3604",
   CellTags->{"ClickToEnter", "Input"}],
  Cell[15116, 450, 652, 20, 
  70, "Text", "ExpressionUUID" -> "d17ab415-e6f6-4578-aa86-1a3a11ed8c04",
   CellTags->{"ClickToEnter", "Input"}],
  Cell[20313, 604, 644, 20, 
  70, "Text", "ExpressionUUID" -> "bcc8f99d-0b0a-4f35-8513-8af1f3517d86",
   CellTags->{"ClickToEnter", "Input"}]},
 "Solution"->{
  Cell[13501, 403, 560, 15, 
  70, "AuthoringSection", "ExpressionUUID" -> "d4b1ef93-c418-4ad5-a86c-
   f2d42fc0024a",
   CellTags->{"Solution", "Required"}]},
 "TestCases"->{
  Cell[15793, 474, 563, 15, 
  70, "AuthoringSection", "ExpressionUUID" -> "c716901f-
   b06b-4437-8f06-6f9e7808d771",
   CellTags->{"TestCases", "Required"}]},
 "Authors"->{
  Cell[20982, 628, 557, 15, 
  70, "AuthoringSection", "ExpressionUUID" -> "157ce426-ada6-49fc-
   bdb9-9ff03f396ff8",
   CellTags->{"Authors", "Optional"}]},
 "Categories"->{
  Cell[22616, 679, 563, 15, 
  70, "AuthoringSection", "ExpressionUUID" -> "371f9b00-6b0e-4506-a16c-
   f097845e1e57",
   CellTags->{"Categories", "Optional"}]},
 "AuthorEmail"->{
  Cell[29261, 837, 566, 15, 
  70, "AuthoringSection", "ExpressionUUID" -> "68549405-806b-4e27-aa51-
   ecb74f2ef415",
   CellTags->{"AuthorEmail", "Optional"}]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"ClickToEnter", 53459, 1343},
 {"Title", 54473, 1365},
 {"DescriptionOfChallenge", 54645, 1369},
 {"Required", 54832, 1374},
 {"Text", 55334, 1387},
 {"MoreDetails", 55780, 1397},
 {"Optional", 55957, 1402},
 {"InputSection", 56782, 1423},
 {"Input", 56958, 1428},
 {"Solution", 57406, 1438},
 {"TestCases", 57582, 1443},
 {"Authors", 57757, 1448},
 {"Categories", 57933, 1453},
 {"AuthorEmail", 58113, 1458}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 610, 18, 70, "Title", "ExpressionUUID" -> \
"ff200018-d6e0-483d-898d-fd4768b5e865",
 CellTags->{"ClickToEnter", "Title"}],
Cell[CellGroupData[{
Cell[1193, 42, 492, 9, 70, "AuthoringSectionCaption", "ExpressionUUID" -> \
"0e70573e-ef4e-45cb-8c03-3c2129790ba0",
 CellGroupingRules->{"TitleGrouping", -1}],
Cell[CellGroupData[{
Cell[1710, 55, 589, 15, 70, "AuthoringSection", "ExpressionUUID" -> \
"06d02a28-0e98-42c6-a303-c50b55aacbaf",
 CellTags->{"DescriptionOfChallenge", "Required"}],
Cell[2302, 72, 444, 8, 70, "AuthoringSectionCaption", "ExpressionUUID" -> \
"13f73b55-2dbe-4485-bf19-a90157dacf35"],
Cell[2749, 82, 136, 2, 70, "AuthoringSectionCaption", "ExpressionUUID" -> \
"e0d85a0a-e478-4125-bfd8-d3314c5435d0"],
Cell[2888, 86, 525, 9, 70, "AuthoringSectionCaption", "ExpressionUUID" -> \
"325793c9-0781-46fc-8876-6d69f894c838"]
}, Open  ]],
Cell[3428, 98, 626, 19, 70, "Text", "ExpressionUUID" -> \
"d24a62a7-6448-4df6-9e18-08c531ceaab8",
 CellTags->{"ClickToEnter", "Text"}],
Cell[CellGroupData[{
Cell[4079, 121, 566, 15, 70, "AuthoringSection", "ExpressionUUID" -> \
"f4130f5b-09ad-4f7d-a148-df2003bc8347",
 CellTags->{"MoreDetails", "Optional"}],
Cell[4648, 138, 440, 8, 70, "AuthoringSectionCaption", "ExpressionUUID" -> \
"1652e452-c706-466a-832e-2fc081de7e97"],
Cell[5091, 148, 2423, 66, 70, "AuthoringSectionCaption", "ExpressionUUID" -> \
"df3d0863-4cf0-460f-bad6-4e14bfb676aa"],
Cell[7517, 216, 131, 2, 70, "AuthoringSectionCaption", "ExpressionUUID" -> \
"cdfe1e77-216b-4a03-88a4-5a32f15ab6f3"],
Cell[7651, 220, 496, 9, 70, "AuthoringSectionCaption", "ExpressionUUID" -> \
"9bf2d729-0585-4a53-aa4c-af7f040ae910"]
}, Open  ]],
Cell[8162, 232, 111, 0, 70, "Text", "ExpressionUUID" -> \
"8e769635-ee06-4e59-aae2-8538a6fa62cb"],
Cell[CellGroupData[{
Cell[8298, 236, 98, 0, 70, "Section", "ExpressionUUID" -> \
"5a98ae26-45eb-413d-a077-cc38966b2ae6"],
Cell[8399, 238, 177, 3, 70, "Text", "ExpressionUUID" -> \
"212a27a6-e366-4cf8-849f-f220f77d0b83"],
Cell[CellGroupData[{
Cell[8601, 245, 161, 3, 70, "Input", "ExpressionUUID" -> \
"6beb652d-4f59-43ae-9812-897b8b6fc20d"],
Cell[8765, 250, 162, 3, 70, "Output", "ExpressionUUID" -> \
"14fb8380-073d-4e78-ac67-43adb5de3953"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[8976, 259, 90, 0, 70, "Subsection", "ExpressionUUID" -> \
"7561ad6f-7171-4276-b27a-74993a7c96b3"],
Cell[9069, 261, 103, 0, 70, "Text", "ExpressionUUID" -> \
"11bc4a12-ba10-4abe-b852-9c3e6679a384"],
Cell[CellGroupData[{
Cell[9197, 265, 161, 3, 70, "Input", "ExpressionUUID" -> \
"3b567f51-e5b1-408e-8b22-862e695a5052"],
Cell[9361, 270, 162, 3, 70, "Output", "ExpressionUUID" -> \
"d42941ea-1657-45ce-b7db-2e7016c8781b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9560, 278, 184, 4, 70, "Input", "ExpressionUUID" -> \
"9ffcd585-2c81-4894-ab33-b218feef4b70"],
Cell[9747, 284, 162, 3, 70, "Output", "ExpressionUUID" -> \
"7b85ec3f-e39c-47cb-ab7e-a9adda480826"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[9958, 293, 103, 0, 70, "Subsection", "ExpressionUUID" -> \
"c2d246d8-4465-4d00-bfb4-d45031e495e8"],
Cell[10064, 295, 175, 3, 70, "Text", "ExpressionUUID" -> \
"628ab7b8-98e4-4424-b16d-1e5a4ad9f39e"],
Cell[10242, 300, 245, 5, 70, "Text", "ExpressionUUID" -> \
"2205e65d-6f25-489d-9a33-725ad8a2099a"],
Cell[CellGroupData[{
Cell[10512, 309, 569, 15, 70, "AuthoringSection", "ExpressionUUID" -> \
"7f46cef9-0ad3-43e4-8ef2-c684d7e730e3",
 CellTags->{"InputSection", "Optional"}],
Cell[11084, 326, 269, 5, 70, "AuthoringSectionCaption", "ExpressionUUID" -> \
"76c1f310-f9a9-482d-9362-523de1947714"],
Cell[11356, 333, 901, 26, 70, "AuthoringSectionCaption", "ExpressionUUID" -> \
"97e7d292-5737-4aa4-8d24-36d41780480f"],
Cell[12260, 361, 562, 15, 70, "AuthoringSectionCaption", "ExpressionUUID" -> \
"4acde9bc-5463-423f-8a08-b8c56ce4c375",
 Evaluatable->False,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[12837, 379, 639, 20, 70, "Text", "ExpressionUUID" -> \
"b120994d-6f71-475c-9f2a-3cffe73e3604",
 CellTags->{"ClickToEnter", "Input"}],
Cell[CellGroupData[{
Cell[13501, 403, 560, 15, 70, "AuthoringSection", "ExpressionUUID" -> \
"d4b1ef93-c418-4ad5-a86c-f2d42fc0024a",
 CellTags->{"Solution", "Required"}],
Cell[14064, 420, 299, 6, 70, "AuthoringSectionCaption", "ExpressionUUID" -> \
"eb1eff0b-f630-46f7-be40-ccc330f92c3a"],
Cell[14366, 428, 136, 2, 70, "AuthoringSectionCaption", "ExpressionUUID" -> \
"2f6d8e99-b994-47c3-b47f-5c0b56006775"],
Cell[14505, 432, 596, 15, 70, "AuthoringSectionCaption", "ExpressionUUID" -> \
"f6ae4e22-07fb-401d-a066-cffb1aca34d9",
 Evaluatable->False,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[15116, 450, 652, 20, 70, "Text", "ExpressionUUID" -> \
"d17ab415-e6f6-4578-aa86-1a3a11ed8c04",
 CellTags->{"ClickToEnter", "Input"}],
Cell[CellGroupData[{
Cell[15793, 474, 563, 15, 70, "AuthoringSection", "ExpressionUUID" -> \
"c716901f-b06b-4437-8f06-6f9e7808d771",
 CellTags->{"TestCases", "Required"}],
Cell[16359, 491, 1565, 38, 70, "AuthoringSectionCaption", "ExpressionUUID" -> \
"6a51e1c1-b54c-48b1-a5aa-08343002dffe"],
Cell[17927, 531, 395, 10, 70, "AuthoringSectionCaption", "ExpressionUUID" -> \
"50d87f3b-8131-468b-8d5b-e51ce82ee6b9"],
Cell[18325, 543, 934, 27, 70, "AuthoringSectionCaption", "ExpressionUUID" -> \
"8b0b00e9-a4ab-49b3-ade8-f2ad9abd25c2",
 Evaluatable->False,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[19262, 572, 183, 3, 70, "AuthoringSectionCaption", "ExpressionUUID" -> \
"cd0431e1-ec51-4a75-b74b-efaf202718c2"],
Cell[19448, 577, 850, 24, 70, "AuthoringSectionCaption", "ExpressionUUID" -> \
"90040d84-dc2d-4f17-994b-4a79d0adf6f8",
 Evaluatable->False,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[20313, 604, 644, 20, 70, "Text", "ExpressionUUID" -> \
"bcc8f99d-0b0a-4f35-8513-8af1f3517d86",
 CellTags->{"ClickToEnter", "Input"}],
Cell[CellGroupData[{
Cell[20982, 628, 557, 15, 70, "AuthoringSection", "ExpressionUUID" -> \
"157ce426-ada6-49fc-bdb9-9ff03f396ff8",
 CellTags->{"Authors", "Optional"}],
Cell[21542, 645, 398, 8, 70, "AuthoringSectionCaption", "ExpressionUUID" -> \
"0abed4c3-773e-4519-81d9-32f4246e855b"]
}, Open  ]],
Cell[21955, 656, 636, 19, 70, "Text", "ExpressionUUID" -> \
"3b5e2aae-2474-4130-9c94-e897cc9947cc",
 CellTags->{"ClickToEnter", "Text"}],
Cell[CellGroupData[{
Cell[22616, 679, 563, 15, 70, "AuthoringSection", "ExpressionUUID" -> \
"371f9b00-6b0e-4506-a16c-f097845e1e57",
 CellTags->{"Categories", "Optional"}],
Cell[23182, 696, 277, 6, 70, "AuthoringSectionCaption", "ExpressionUUID" -> \
"9d418898-98b1-475f-9554-9259bfbb66d6"]
}, Open  ]],
Cell[23474, 705, 5762, 128, 70, "TagGrid", "ExpressionUUID" -> \
"5e5d583a-fe85-44d9-87fd-e69b17520f32"],
Cell[CellGroupData[{
Cell[29261, 837, 566, 15, 70, "AuthoringSection", "ExpressionUUID" -> \
"68549405-806b-4e27-aa51-ecb74f2ef415",
 CellTags->{"AuthorEmail", "Optional"}],
Cell[29830, 854, 816, 20, 70, "AuthoringSectionCaption", "ExpressionUUID" -> \
"23f0ab45-2f63-4476-b054-ced39b9a297f"]
}, Open  ]],
Cell[30661, 877, 620, 19, 70, "Text", "ExpressionUUID" -> \
"f3d1d256-3076-4947-a000-fb9f203933be",
 CellTags->{"ClickToEnter", "Text"}]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
